// <auto-generated />
using System;
using Cars_Bikes.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Cars_Bikes.Migrations
{
    [DbContext(typeof(TwoWheelerDB))]
    partial class TwoWheelerDBModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Cars_Bikes.Models.Blogs", b =>
                {
                    b.Property<int>("BlogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BlogId"));

                    b.Property<string>("BlogDetail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BlogHeading")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("BlogSummary")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsTwoWheeler")
                        .HasColumnType("bit");

                    b.Property<string>("URL")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BlogId");

                    b.ToTable("Blogs");
                });

            modelBuilder.Entity("Cars_Bikes.Models.CompareItems", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CompareUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Topic")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CompareItems");
                });

            modelBuilder.Entity("Cars_Bikes.Models.LoginModel", b =>
                {
                    b.Property<int>("LoginId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LoginId"));

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LoginId");

                    b.ToTable("LoginModel");
                });

            modelBuilder.Entity("Cars_Bikes.Models.NewsLetter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("NewsLetters");
                });

            modelBuilder.Entity("Cars_Bikes.Models.TWCharging", b =>
                {
                    b.Property<int>("TWChargingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TWChargingId"));

                    b.Property<string>("ChargingAtChargingStation")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("ChargingAtHome")
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("TWName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TWVarientId")
                        .HasColumnType("int");

                    b.Property<int?>("TwoWheelerId")
                        .HasColumnType("int");

                    b.Property<string>("Varients")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TWChargingId");

                    b.HasIndex("TWVarientId");

                    b.HasIndex("TwoWheelerId");

                    b.ToTable("TWChargings");
                });

            modelBuilder.Entity("Cars_Bikes.Models.TWDimensionsAndCapacity", b =>
                {
                    b.Property<int>("TWDimensionsAndCapacityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TWDimensionsAndCapacityId"));

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("FuelCapacity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("FuelReserve")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("GroundClearance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Height")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("KerbWeight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Length")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("SaddleHeight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TWName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TWVarientId")
                        .HasColumnType("int");

                    b.Property<int?>("TwoWheelerId")
                        .HasColumnType("int");

                    b.Property<string>("Varients")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Wheelbase")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Width")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("TWDimensionsAndCapacityId");

                    b.HasIndex("TWVarientId");

                    b.HasIndex("TwoWheelerId");

                    b.ToTable("TWDimensionsAndCapacities");
                });

            modelBuilder.Entity("Cars_Bikes.Models.TWEVAppFeatures", b =>
                {
                    b.Property<int>("TWEVAppFeaturesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TWEVAppFeaturesId"));

                    b.Property<string>("AntiTheftAlarm")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("CallsAndMessaging")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("ChargingStationLocate")
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Geofencing")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("LowBatteryAlert")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("NavigationAssis")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("TWName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TWVarientId")
                        .HasColumnType("int");

                    b.Property<int?>("TwoWheelerId")
                        .HasColumnType("int");

                    b.Property<string>("Varients")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TWEVAppFeaturesId");

                    b.HasIndex("TWVarientId");

                    b.HasIndex("TwoWheelerId");

                    b.ToTable("TWEVAppFeatures");
                });

            modelBuilder.Entity("Cars_Bikes.Models.TWEVCharging", b =>
                {
                    b.Property<int>("TWEVChargingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TWEVChargingId"));

                    b.Property<string>("ChargingAtChargingStation")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("ChargingAtHome")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("ChargingNetworkBatterySwappingNetwork")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("ChargingTimeZeroTo100Percent")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("ChargingTimeZeroTo80Percent")
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("TWName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TWVarientId")
                        .HasColumnType("int");

                    b.Property<int?>("TwoWheelerId")
                        .HasColumnType("int");

                    b.Property<string>("Varients")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TWEVChargingId");

                    b.HasIndex("TWVarientId");

                    b.HasIndex("TwoWheelerId");

                    b.ToTable("TWEVChargings");
                });

            modelBuilder.Entity("Cars_Bikes.Models.TWEVChassisAndSuspension", b =>
                {
                    b.Property<int>("TWEVChassisAndSuspensionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TWEVChassisAndSuspensionId"));

                    b.Property<string>("BodyType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TWName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TWVarientId")
                        .HasColumnType("int");

                    b.Property<int>("TwoWheelerId")
                        .HasColumnType("int");

                    b.Property<string>("Varients")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TWEVChassisAndSuspensionId");

                    b.HasIndex("TWVarientId");

                    b.HasIndex("TwoWheelerId");

                    b.ToTable("TWEVChassisAndSuspensions");
                });

            modelBuilder.Entity("Cars_Bikes.Models.TWEVDimensionsAndCapacity", b =>
                {
                    b.Property<int>("TWEVDimensionsAndCapacityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TWEVDimensionsAndCapacityId"));

                    b.Property<string>("AdditionalStorage")
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("GroundClearance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Height")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("KerbWeight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Length")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SaddleHeight")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("TWName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TWVarientId")
                        .HasColumnType("int");

                    b.Property<int?>("TwoWheelerId")
                        .HasColumnType("int");

                    b.Property<string>("Varients")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Wheelbase")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Width")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("TWEVDimensionsAndCapacityId");

                    b.HasIndex("TWVarientId");

                    b.HasIndex("TwoWheelerId");

                    b.ToTable("TWEVDimensionsAndCapacities");
                });

            modelBuilder.Entity("Cars_Bikes.Models.TWEVElectricals", b =>
                {
                    b.Property<int>("TWEVElectricalsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TWEVElectricalsId"));

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Headlight")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("LEDTailLights")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("LowBatteryIndicator")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("TWName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TWVarientId")
                        .HasColumnType("int");

                    b.Property<string>("TailLight")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("TurnSignalLamp")
                        .HasColumnType("varchar(30)");

                    b.Property<int?>("TwoWheelerId")
                        .HasColumnType("int");

                    b.Property<string>("Varients")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TWEVElectricalsId");

                    b.HasIndex("TWVarientId");

                    b.HasIndex("TwoWheelerId");

                    b.ToTable("TWEVElectricals");
                });

            modelBuilder.Entity("Cars_Bikes.Models.TWEVEngineAndTransmission", b =>
                {
                    b.Property<int>("TWEVEngineAndTransmissionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TWEVEngineAndTransmissionId"));

                    b.Property<string>("CoolingSystem")
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("EVName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotorIPRating")
                        .HasColumnType("varchar(30)");

                    b.Property<decimal?>("MotorPower")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("NumOfBattries")
                        .HasColumnType("int");

                    b.Property<string>("RangeEcoMode")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("RangeNormalMode")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("RangeSportsMode")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Starting")
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("TWVarientId")
                        .HasColumnType("int");

                    b.Property<int?>("TwoWheelerId")
                        .HasColumnType("int");

                    b.Property<string>("Varients")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TWEVEngineAndTransmissionId");

                    b.HasIndex("TWVarientId");

                    b.HasIndex("TwoWheelerId");

                    b.ToTable("TWEVEngineAndTransmissions");
                });

            modelBuilder.Entity("Cars_Bikes.Models.TWEVFeatures", b =>
                {
                    b.Property<int>("TWEVFeaturesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TWEVFeaturesId"));

                    b.Property<string>("AdditionalFeaturesOfVariant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AntiTheftAlarm")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("BluetoothConnectivity")
                        .HasColumnType("varchar(60)");

                    b.Property<string>("CallSMSAlerts")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("CarryHook")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("ChargerOutput")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Clock")
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("EVName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HillHold")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("InstrumentConsole")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("KeylessIgnition")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("MusicControl")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Navigation")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("OTA")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Odometer")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("PassengerFootrest")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("RegenerativeBraking")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("RoadsideAssistance")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("SeatType")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Speedometer")
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("TWVarientId")
                        .HasColumnType("int");

                    b.Property<string>("Tripmeter")
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("TwoWheelerId")
                        .HasColumnType("int");

                    b.Property<string>("USBChargingPort")
                        .HasColumnType("varchar(30)");

                    b.Property<decimal?>("UnderseatStorage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Varients")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TWEVFeaturesId");

                    b.HasIndex("TWVarientId");

                    b.HasIndex("TwoWheelerId");

                    b.ToTable("TWEVFeatures");
                });

            modelBuilder.Entity("Cars_Bikes.Models.TWEVMotorAndBattery", b =>
                {
                    b.Property<int>("TWEVMotorAndBatteryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TWEVMotorAndBatteryId"));

                    b.Property<decimal?>("BatteryCapacity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BatteryType")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("BatteryWarranty")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("MotorType")
                        .HasColumnType("varchar(50)");

                    b.Property<decimal?>("PeakPower")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ReverseAssist")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("TWName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TWVarientId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TorqueMotor")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Transmission")
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("TwoWheelerId")
                        .HasColumnType("int");

                    b.Property<string>("Varients")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WaterProofRating")
                        .HasColumnType("varchar(80)");

                    b.HasKey("TWEVMotorAndBatteryId");

                    b.HasIndex("TWVarientId");

                    b.HasIndex("TwoWheelerId");

                    b.ToTable("TWEVMotorAndBatteries");
                });

            modelBuilder.Entity("Cars_Bikes.Models.TWEVPerformance", b =>
                {
                    b.Property<int>("TWEVPerformanceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TWEVPerformanceId"));

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ScooterSpeed")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("TWName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TWVarientId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TopSpeed")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("TwoWheelerId")
                        .HasColumnType("int");

                    b.Property<string>("Varients")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("ZeroTo100Kmphsec")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ZeroTo40Kmphsec")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("TWEVPerformanceId");

                    b.HasIndex("TWVarientId");

                    b.HasIndex("TwoWheelerId");

                    b.ToTable("TWEVPerformances");
                });

            modelBuilder.Entity("Cars_Bikes.Models.TWEVRange", b =>
                {
                    b.Property<int>("TWEVRangeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TWEVRangeId"));

                    b.Property<string>("ClaimedRange")
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("TWName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TWVarientId")
                        .HasColumnType("int");

                    b.Property<int?>("TwoWheelerId")
                        .HasColumnType("int");

                    b.Property<string>("Varients")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TWEVRangeId");

                    b.HasIndex("TWVarientId");

                    b.HasIndex("TwoWheelerId");

                    b.ToTable("TWEVRanges");
                });

            modelBuilder.Entity("Cars_Bikes.Models.TWEVSafety", b =>
                {
                    b.Property<int>("TWEVSafetyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TWEVSafetyId"));

                    b.Property<string>("BrakingType")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ChargingPoint")
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Display")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EBS")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("FastCharging")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Gradeability")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("InternetConnectivity")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("MobileApplication")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("OperatingSystem")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Processor")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("RidingModes")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("SeatOpeningSwitch")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("ServiceDueIndicator")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("SwitchableABS")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("TWName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TWVarientId")
                        .HasColumnType("int");

                    b.Property<int?>("TwoWheelerId")
                        .HasColumnType("int");

                    b.Property<string>("Varients")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TWEVSafetyId");

                    b.HasIndex("TWVarientId");

                    b.HasIndex("TwoWheelerId");

                    b.ToTable("TWEVSafety");
                });

            modelBuilder.Entity("Cars_Bikes.Models.TWEVTyresAndBrakes", b =>
                {
                    b.Property<int>("TWEVTyresAndBrakesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TWEVTyresAndBrakesId"));

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("FrontBrakeDiameter")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("FrontTyrePressureRider")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("FrontTyrePressureRiderAndPillion")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("RearBrakeDiameter")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("RearTyrePressureRider")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("RearTyrePressureRiderAndPillion")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TWName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TWVarientId")
                        .HasColumnType("int");

                    b.Property<int?>("TwoWheelerId")
                        .HasColumnType("int");

                    b.Property<string>("Varients")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TWEVTyresAndBrakesId");

                    b.HasIndex("TWVarientId");

                    b.HasIndex("TwoWheelerId");

                    b.ToTable("TWEVTyresAndBrakes");
                });

            modelBuilder.Entity("Cars_Bikes.Models.TWEVUnderpinning", b =>
                {
                    b.Property<int>("TWEVUnderpinningId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TWEVUnderpinningId"));

                    b.Property<string>("ABS")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("BrakesFront")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("BrakesRear")
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Frame")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("SuspensionFront")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SuspensionRear")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TWName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TWVarientId")
                        .HasColumnType("int");

                    b.Property<string>("TubelessTyre")
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("TwoWheelerId")
                        .HasColumnType("int");

                    b.Property<string>("TyreSize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Varients")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WheelSize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WheelType")
                        .HasColumnType("varchar(50)");

                    b.HasKey("TWEVUnderpinningId");

                    b.HasIndex("TWVarientId");

                    b.HasIndex("TwoWheelerId");

                    b.ToTable("TWEVUnderpinnings");
                });

            modelBuilder.Entity("Cars_Bikes.Models.TWElectricals", b =>
                {
                    b.Property<int>("TWElectricalsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TWElectricalsId"));

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("DRLs")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DistanceToEmptyIndicator")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Headlight")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LEDTailLights")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("LowFuelIndicato")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PilotLamps")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TWName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TWVarientId")
                        .HasColumnType("int");

                    b.Property<string>("TailLight")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TurnSignalLamp")
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("TwoWheelerId")
                        .HasColumnType("int");

                    b.Property<string>("Varients")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TWElectricalsId");

                    b.HasIndex("TWVarientId");

                    b.HasIndex("TwoWheelerId");

                    b.ToTable("TWElectricals");
                });

            modelBuilder.Entity("Cars_Bikes.Models.TWEngineAndTransmission", b =>
                {
                    b.Property<int>("TWEngineAndTransmissionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TWEngineAndTransmissionId"));

                    b.Property<string>("Clutch")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompressionRatio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CoolingSystem")
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("Displacement")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("EmissionType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EngineType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FuelSupply")
                        .HasColumnType("varchar(40)");

                    b.Property<string>("GearBox")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Ignition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaxTorque")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NumOfCylinders")
                        .HasColumnType("int");

                    b.Property<string>("Starting")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("TWName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TWVarientId")
                        .HasColumnType("int");

                    b.Property<int?>("TwoWheelerId")
                        .HasColumnType("int");

                    b.Property<int?>("ValvePerCylinder")
                        .HasColumnType("int");

                    b.Property<string>("Varients")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TWEngineAndTransmissionId");

                    b.HasIndex("TWVarientId");

                    b.HasIndex("TwoWheelerId");

                    b.ToTable("TWEngineAndTransmissions");
                });

            modelBuilder.Entity("Cars_Bikes.Models.TWFeatures", b =>
                {
                    b.Property<int>("TWFeaturesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TWFeaturesId"));

                    b.Property<string>("ABS")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("AdditionalFeaturesOfVariant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdjustableWindshield")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BodyGraphics")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Clock")
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("DistanceToEmptyIndicator")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FuelGauge")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("InstrumentConsole")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("LEDTailLight")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Odometer")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("PassengerFootrest")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("SeatType")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Speedometer")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("TWName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TWVarientId")
                        .HasColumnType("int");

                    b.Property<string>("Tachometer")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Tripmeter")
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("TwoWheelerId")
                        .HasColumnType("int");

                    b.Property<string>("Varients")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TWFeaturesId");

                    b.HasIndex("TWVarientId");

                    b.HasIndex("TwoWheelerId");

                    b.ToTable("TWFeatures");
                });

            modelBuilder.Entity("Cars_Bikes.Models.TWImageColorPrice", b =>
                {
                    b.Property<int>("TWImageColorPriceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TWImageColorPriceId"));

                    b.Property<string>("BottomColorCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageAltTag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Price")
                        .HasColumnType("int");

                    b.Property<string>("TWName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TWVarientId")
                        .HasColumnType("int");

                    b.Property<string>("TopColorCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("TwoWheelerId")
                        .HasColumnType("int");

                    b.Property<string>("Varients")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TWImageColorPriceId");

                    b.HasIndex("TWVarientId");

                    b.HasIndex("TwoWheelerId");

                    b.ToTable("TWImageColorPrices");
                });

            modelBuilder.Entity("Cars_Bikes.Models.TWLatestNews", b =>
                {
                    b.Property<int>("TWLatestNewsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TWLatestNewsId"));

                    b.Property<string>("BrandName")
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageFolderURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsTwoWheeler")
                        .HasColumnType("bit");

                    b.Property<string>("NewsDetail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NewsHeading")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("NewsSummary")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<int?>("TwoWBrandId")
                        .HasColumnType("int");

                    b.HasKey("TWLatestNewsId");

                    b.HasIndex("TwoWBrandId");

                    b.ToTable("LatestNews");
                });

            modelBuilder.Entity("Cars_Bikes.Models.TWMileageAndPerformance", b =>
                {
                    b.Property<int>("TWMileageAndPerformanceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TWMileageAndPerformanceId"));

                    b.Property<decimal?>("CityMileage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("HighwayMileage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("OverallMileage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TWName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TWVarientId")
                        .HasColumnType("int");

                    b.Property<int?>("TwoWheelerId")
                        .HasColumnType("int");

                    b.Property<string>("Varients")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TWMileageAndPerformanceId");

                    b.HasIndex("TWVarientId");

                    b.HasIndex("TwoWheelerId");

                    b.ToTable("TWMileageAndPerformances");
                });

            modelBuilder.Entity("Cars_Bikes.Models.TWMotorAndBattery", b =>
                {
                    b.Property<int>("TWMotorAndBatteryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TWMotorAndBatteryId"));

                    b.Property<string>("BatteryCapacity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("DriveType")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("PeakPower")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TWName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TWVarientId")
                        .HasColumnType("int");

                    b.Property<string>("Transmission")
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("TwoWheelerId")
                        .HasColumnType("int");

                    b.Property<string>("Varients")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TWMotorAndBatteryId");

                    b.HasIndex("TWVarientId");

                    b.HasIndex("TwoWheelerId");

                    b.ToTable("TWMotorAndBatteries");
                });

            modelBuilder.Entity("Cars_Bikes.Models.TWOrFWContactUs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(60)");

                    b.Property<string>("PhoneNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TWOrFWContactUs");
                });

            modelBuilder.Entity("Cars_Bikes.Models.TWSafety", b =>
                {
                    b.Property<int>("TWSafetyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TWSafetyId"));

                    b.Property<string>("AdditionalFeatures")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Display")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EngineKillSwitch")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("PassSwitch")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("RidingModes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TWName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TWVarientId")
                        .HasColumnType("int");

                    b.Property<string>("TractionControl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TwoWheelerId")
                        .HasColumnType("int");

                    b.Property<string>("Varients")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TWSafetyId");

                    b.HasIndex("TWVarientId");

                    b.HasIndex("TwoWheelerId");

                    b.ToTable("TWSafety");
                });

            modelBuilder.Entity("Cars_Bikes.Models.TWSpec", b =>
                {
                    b.Property<int>("TWSpecId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TWSpecId"));

                    b.Property<string>("BodyType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("FrontBrake")
                        .HasColumnType("varchar(30)");

                    b.Property<decimal?>("FuelCapacity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Milage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("RearBrake")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("TWName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TWVarientId")
                        .HasColumnType("int");

                    b.Property<int?>("TwoWheelerId")
                        .HasColumnType("int");

                    b.Property<string>("Varients")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TWSpecId");

                    b.HasIndex("TWVarientId");

                    b.HasIndex("TwoWheelerId");

                    b.ToTable("TWSpec");
                });

            modelBuilder.Entity("Cars_Bikes.Models.TWTyresAndBrakes", b =>
                {
                    b.Property<int>("TWTyresAndBrakesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TWTyresAndBrakesId"));

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("FrontBrakeDiameter")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("FrontSuspension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RadialTyre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("RearBrakeDiameter")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("RearSuspension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TWName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TWVarientId")
                        .HasColumnType("int");

                    b.Property<int?>("TwoWheelerId")
                        .HasColumnType("int");

                    b.Property<string>("Varients")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TWTyresAndBrakesId");

                    b.HasIndex("TWVarientId");

                    b.HasIndex("TwoWheelerId");

                    b.ToTable("TWTyresAndBrakes");
                });

            modelBuilder.Entity("Cars_Bikes.Models.TWUnderpinning", b =>
                {
                    b.Property<int>("TWUnderpinningId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TWUnderpinningId"));

                    b.Property<string>("BrakesFront")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("BrakesRear")
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("SuspensionFront")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SuspensionRear")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TWName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TWVarientId")
                        .HasColumnType("int");

                    b.Property<string>("TubelessTyre")
                        .HasColumnType("varchar(10)");

                    b.Property<int?>("TwoWheelerId")
                        .HasColumnType("int");

                    b.Property<string>("TyreSize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Varients")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WheelSize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WheelType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TWUnderpinningId");

                    b.HasIndex("TWVarientId");

                    b.HasIndex("TwoWheelerId");

                    b.ToTable("TWUnderpinnings");
                });

            modelBuilder.Entity("Cars_Bikes.Models.TWVarient", b =>
                {
                    b.Property<int>("TWVarientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TWVarientId"));

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("TWName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TwoWheelerId")
                        .HasColumnType("int");

                    b.Property<string>("Varients")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TWVarientId");

                    b.HasIndex("TwoWheelerId");

                    b.ToTable("TWVarients");
                });

            modelBuilder.Entity("Cars_Bikes.Models.TwoWheeler", b =>
                {
                    b.Property<int>("TwoWheelerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TwoWheelerId"));

                    b.Property<int?>("BasePrice")
                        .HasColumnType("int");

                    b.Property<string>("Brand")
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Discription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsEV")
                        .HasColumnType("bit");

                    b.Property<string>("LaunchDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NotesOrComments")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Price")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TWImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TopPrice")
                        .HasColumnType("int");

                    b.Property<int?>("TwoWBrandId")
                        .HasColumnType("int");

                    b.Property<string>("TwoWheelerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("varchar(30)");

                    b.HasKey("TwoWheelerId");

                    b.HasIndex("TwoWBrandId");

                    b.ToTable("TwoWheelers");
                });

            modelBuilder.Entity("Cars_Bikes.Models.TwoWheelerBrand", b =>
                {
                    b.Property<int>("TWBrandId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TWBrandId"));

                    b.Property<string>("BrandLogoURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BrandName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Discription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsEV")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsFWBrand")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPetrol")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsTWBrand")
                        .HasColumnType("bit");

                    b.Property<string>("MetaDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MetaKeywords")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitleTag")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TWBrandId");

                    b.ToTable("TWBrands");
                });

            modelBuilder.Entity("Cars_Bikes.Models.UpcomingBike", b =>
                {
                    b.Property<int>("UpcomingBikeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UpcomingBikeId"));

                    b.Property<string>("BrandName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExpectedLaunchDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FilterLaunchDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageFolderURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TwoWBrandId")
                        .HasColumnType("int");

                    b.Property<string>("UpcomingBikeDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpcomingBikeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UpcomingBikeId");

                    b.HasIndex("TwoWBrandId");

                    b.ToTable("TWUpcomingBikes");
                });

            modelBuilder.Entity("Cars_Bikes.Models.ValueForMoney", b =>
                {
                    b.Property<int>("VFMId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VFMId"));

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsTwoWheeler")
                        .HasColumnType("bit");

                    b.Property<string>("URL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VFMHeading")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("VFMId");

                    b.ToTable("ValueForMoney");
                });

            modelBuilder.Entity("Cars_Bikes.Models.TWCharging", b =>
                {
                    b.HasOne("Cars_Bikes.Models.TWVarient", "TWVarients")
                        .WithMany()
                        .HasForeignKey("TWVarientId");

                    b.HasOne("Cars_Bikes.Models.TwoWheeler", "TwoWheeler")
                        .WithMany()
                        .HasForeignKey("TwoWheelerId");

                    b.Navigation("TWVarients");

                    b.Navigation("TwoWheeler");
                });

            modelBuilder.Entity("Cars_Bikes.Models.TWDimensionsAndCapacity", b =>
                {
                    b.HasOne("Cars_Bikes.Models.TWVarient", "TWVarients")
                        .WithMany()
                        .HasForeignKey("TWVarientId");

                    b.HasOne("Cars_Bikes.Models.TwoWheeler", "TwoWheeler")
                        .WithMany()
                        .HasForeignKey("TwoWheelerId");

                    b.Navigation("TWVarients");

                    b.Navigation("TwoWheeler");
                });

            modelBuilder.Entity("Cars_Bikes.Models.TWEVAppFeatures", b =>
                {
                    b.HasOne("Cars_Bikes.Models.TWVarient", "TWVarients")
                        .WithMany()
                        .HasForeignKey("TWVarientId");

                    b.HasOne("Cars_Bikes.Models.TwoWheeler", "TwoWheeler")
                        .WithMany()
                        .HasForeignKey("TwoWheelerId");

                    b.Navigation("TWVarients");

                    b.Navigation("TwoWheeler");
                });

            modelBuilder.Entity("Cars_Bikes.Models.TWEVCharging", b =>
                {
                    b.HasOne("Cars_Bikes.Models.TWVarient", "TWVarients")
                        .WithMany()
                        .HasForeignKey("TWVarientId");

                    b.HasOne("Cars_Bikes.Models.TwoWheeler", "TwoWheeler")
                        .WithMany()
                        .HasForeignKey("TwoWheelerId");

                    b.Navigation("TWVarients");

                    b.Navigation("TwoWheeler");
                });

            modelBuilder.Entity("Cars_Bikes.Models.TWEVChassisAndSuspension", b =>
                {
                    b.HasOne("Cars_Bikes.Models.TWVarient", "TWVarients")
                        .WithMany()
                        .HasForeignKey("TWVarientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cars_Bikes.Models.TwoWheeler", "TwoWheeler")
                        .WithMany()
                        .HasForeignKey("TwoWheelerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TWVarients");

                    b.Navigation("TwoWheeler");
                });

            modelBuilder.Entity("Cars_Bikes.Models.TWEVDimensionsAndCapacity", b =>
                {
                    b.HasOne("Cars_Bikes.Models.TWVarient", "TWVarients")
                        .WithMany()
                        .HasForeignKey("TWVarientId");

                    b.HasOne("Cars_Bikes.Models.TwoWheeler", "TwoWheeler")
                        .WithMany()
                        .HasForeignKey("TwoWheelerId");

                    b.Navigation("TWVarients");

                    b.Navigation("TwoWheeler");
                });

            modelBuilder.Entity("Cars_Bikes.Models.TWEVElectricals", b =>
                {
                    b.HasOne("Cars_Bikes.Models.TWVarient", "TWVarients")
                        .WithMany()
                        .HasForeignKey("TWVarientId");

                    b.HasOne("Cars_Bikes.Models.TwoWheeler", "TwoWheeler")
                        .WithMany()
                        .HasForeignKey("TwoWheelerId");

                    b.Navigation("TWVarients");

                    b.Navigation("TwoWheeler");
                });

            modelBuilder.Entity("Cars_Bikes.Models.TWEVEngineAndTransmission", b =>
                {
                    b.HasOne("Cars_Bikes.Models.TWVarient", "TWVarients")
                        .WithMany()
                        .HasForeignKey("TWVarientId");

                    b.HasOne("Cars_Bikes.Models.TwoWheeler", "TwoWheeler")
                        .WithMany()
                        .HasForeignKey("TwoWheelerId");

                    b.Navigation("TWVarients");

                    b.Navigation("TwoWheeler");
                });

            modelBuilder.Entity("Cars_Bikes.Models.TWEVFeatures", b =>
                {
                    b.HasOne("Cars_Bikes.Models.TWVarient", "TWVarients")
                        .WithMany()
                        .HasForeignKey("TWVarientId");

                    b.HasOne("Cars_Bikes.Models.TwoWheeler", "TwoWheeler")
                        .WithMany()
                        .HasForeignKey("TwoWheelerId");

                    b.Navigation("TWVarients");

                    b.Navigation("TwoWheeler");
                });

            modelBuilder.Entity("Cars_Bikes.Models.TWEVMotorAndBattery", b =>
                {
                    b.HasOne("Cars_Bikes.Models.TWVarient", "TWVarients")
                        .WithMany()
                        .HasForeignKey("TWVarientId");

                    b.HasOne("Cars_Bikes.Models.TwoWheeler", "TwoWheeler")
                        .WithMany()
                        .HasForeignKey("TwoWheelerId");

                    b.Navigation("TWVarients");

                    b.Navigation("TwoWheeler");
                });

            modelBuilder.Entity("Cars_Bikes.Models.TWEVPerformance", b =>
                {
                    b.HasOne("Cars_Bikes.Models.TWVarient", "TWVarients")
                        .WithMany()
                        .HasForeignKey("TWVarientId");

                    b.HasOne("Cars_Bikes.Models.TwoWheeler", "TwoWheeler")
                        .WithMany()
                        .HasForeignKey("TwoWheelerId");

                    b.Navigation("TWVarients");

                    b.Navigation("TwoWheeler");
                });

            modelBuilder.Entity("Cars_Bikes.Models.TWEVRange", b =>
                {
                    b.HasOne("Cars_Bikes.Models.TWVarient", "TWVarients")
                        .WithMany()
                        .HasForeignKey("TWVarientId");

                    b.HasOne("Cars_Bikes.Models.TwoWheeler", "TwoWheeler")
                        .WithMany()
                        .HasForeignKey("TwoWheelerId");

                    b.Navigation("TWVarients");

                    b.Navigation("TwoWheeler");
                });

            modelBuilder.Entity("Cars_Bikes.Models.TWEVSafety", b =>
                {
                    b.HasOne("Cars_Bikes.Models.TWVarient", "TWVarients")
                        .WithMany()
                        .HasForeignKey("TWVarientId");

                    b.HasOne("Cars_Bikes.Models.TwoWheeler", "TwoWheeler")
                        .WithMany()
                        .HasForeignKey("TwoWheelerId");

                    b.Navigation("TWVarients");

                    b.Navigation("TwoWheeler");
                });

            modelBuilder.Entity("Cars_Bikes.Models.TWEVTyresAndBrakes", b =>
                {
                    b.HasOne("Cars_Bikes.Models.TWVarient", "TWVarients")
                        .WithMany()
                        .HasForeignKey("TWVarientId");

                    b.HasOne("Cars_Bikes.Models.TwoWheeler", "TwoWheeler")
                        .WithMany()
                        .HasForeignKey("TwoWheelerId");

                    b.Navigation("TWVarients");

                    b.Navigation("TwoWheeler");
                });

            modelBuilder.Entity("Cars_Bikes.Models.TWEVUnderpinning", b =>
                {
                    b.HasOne("Cars_Bikes.Models.TWVarient", "TWVarients")
                        .WithMany()
                        .HasForeignKey("TWVarientId");

                    b.HasOne("Cars_Bikes.Models.TwoWheeler", "TwoWheeler")
                        .WithMany()
                        .HasForeignKey("TwoWheelerId");

                    b.Navigation("TWVarients");

                    b.Navigation("TwoWheeler");
                });

            modelBuilder.Entity("Cars_Bikes.Models.TWElectricals", b =>
                {
                    b.HasOne("Cars_Bikes.Models.TWVarient", "TWVarients")
                        .WithMany()
                        .HasForeignKey("TWVarientId");

                    b.HasOne("Cars_Bikes.Models.TwoWheeler", "TwoWheeler")
                        .WithMany()
                        .HasForeignKey("TwoWheelerId");

                    b.Navigation("TWVarients");

                    b.Navigation("TwoWheeler");
                });

            modelBuilder.Entity("Cars_Bikes.Models.TWEngineAndTransmission", b =>
                {
                    b.HasOne("Cars_Bikes.Models.TWVarient", "TWVarients")
                        .WithMany()
                        .HasForeignKey("TWVarientId");

                    b.HasOne("Cars_Bikes.Models.TwoWheeler", "TwoWheeler")
                        .WithMany()
                        .HasForeignKey("TwoWheelerId");

                    b.Navigation("TWVarients");

                    b.Navigation("TwoWheeler");
                });

            modelBuilder.Entity("Cars_Bikes.Models.TWFeatures", b =>
                {
                    b.HasOne("Cars_Bikes.Models.TWVarient", "TWVarients")
                        .WithMany()
                        .HasForeignKey("TWVarientId");

                    b.HasOne("Cars_Bikes.Models.TwoWheeler", "TwoWheeler")
                        .WithMany()
                        .HasForeignKey("TwoWheelerId");

                    b.Navigation("TWVarients");

                    b.Navigation("TwoWheeler");
                });

            modelBuilder.Entity("Cars_Bikes.Models.TWImageColorPrice", b =>
                {
                    b.HasOne("Cars_Bikes.Models.TWVarient", "TWVarients")
                        .WithMany()
                        .HasForeignKey("TWVarientId");

                    b.HasOne("Cars_Bikes.Models.TwoWheeler", "TwoWheeler")
                        .WithMany()
                        .HasForeignKey("TwoWheelerId");

                    b.Navigation("TWVarients");

                    b.Navigation("TwoWheeler");
                });

            modelBuilder.Entity("Cars_Bikes.Models.TWLatestNews", b =>
                {
                    b.HasOne("Cars_Bikes.Models.TwoWheelerBrand", "TwoWheelerBrands")
                        .WithMany()
                        .HasForeignKey("TwoWBrandId");

                    b.Navigation("TwoWheelerBrands");
                });

            modelBuilder.Entity("Cars_Bikes.Models.TWMileageAndPerformance", b =>
                {
                    b.HasOne("Cars_Bikes.Models.TWVarient", "TWVarients")
                        .WithMany()
                        .HasForeignKey("TWVarientId");

                    b.HasOne("Cars_Bikes.Models.TwoWheeler", "TwoWheeler")
                        .WithMany()
                        .HasForeignKey("TwoWheelerId");

                    b.Navigation("TWVarients");

                    b.Navigation("TwoWheeler");
                });

            modelBuilder.Entity("Cars_Bikes.Models.TWMotorAndBattery", b =>
                {
                    b.HasOne("Cars_Bikes.Models.TWVarient", "TWVarients")
                        .WithMany()
                        .HasForeignKey("TWVarientId");

                    b.HasOne("Cars_Bikes.Models.TwoWheeler", "TwoWheeler")
                        .WithMany()
                        .HasForeignKey("TwoWheelerId");

                    b.Navigation("TWVarients");

                    b.Navigation("TwoWheeler");
                });

            modelBuilder.Entity("Cars_Bikes.Models.TWSafety", b =>
                {
                    b.HasOne("Cars_Bikes.Models.TWVarient", "TWVarients")
                        .WithMany()
                        .HasForeignKey("TWVarientId");

                    b.HasOne("Cars_Bikes.Models.TwoWheeler", "TwoWheeler")
                        .WithMany()
                        .HasForeignKey("TwoWheelerId");

                    b.Navigation("TWVarients");

                    b.Navigation("TwoWheeler");
                });

            modelBuilder.Entity("Cars_Bikes.Models.TWSpec", b =>
                {
                    b.HasOne("Cars_Bikes.Models.TWVarient", "TWVarients")
                        .WithMany()
                        .HasForeignKey("TWVarientId");

                    b.HasOne("Cars_Bikes.Models.TwoWheeler", "TwoWheeler")
                        .WithMany()
                        .HasForeignKey("TwoWheelerId");

                    b.Navigation("TWVarients");

                    b.Navigation("TwoWheeler");
                });

            modelBuilder.Entity("Cars_Bikes.Models.TWTyresAndBrakes", b =>
                {
                    b.HasOne("Cars_Bikes.Models.TWVarient", "TWVarients")
                        .WithMany()
                        .HasForeignKey("TWVarientId");

                    b.HasOne("Cars_Bikes.Models.TwoWheeler", "TwoWheeler")
                        .WithMany()
                        .HasForeignKey("TwoWheelerId");

                    b.Navigation("TWVarients");

                    b.Navigation("TwoWheeler");
                });

            modelBuilder.Entity("Cars_Bikes.Models.TWUnderpinning", b =>
                {
                    b.HasOne("Cars_Bikes.Models.TWVarient", "TWVarients")
                        .WithMany()
                        .HasForeignKey("TWVarientId");

                    b.HasOne("Cars_Bikes.Models.TwoWheeler", "TwoWheeler")
                        .WithMany()
                        .HasForeignKey("TwoWheelerId");

                    b.Navigation("TWVarients");

                    b.Navigation("TwoWheeler");
                });

            modelBuilder.Entity("Cars_Bikes.Models.TWVarient", b =>
                {
                    b.HasOne("Cars_Bikes.Models.TwoWheeler", "TwoWheeler")
                        .WithMany("TWVarients")
                        .HasForeignKey("TwoWheelerId");

                    b.Navigation("TwoWheeler");
                });

            modelBuilder.Entity("Cars_Bikes.Models.TwoWheeler", b =>
                {
                    b.HasOne("Cars_Bikes.Models.TwoWheelerBrand", "TwoWheelerBrands")
                        .WithMany("TwoWheelers")
                        .HasForeignKey("TwoWBrandId");

                    b.Navigation("TwoWheelerBrands");
                });

            modelBuilder.Entity("Cars_Bikes.Models.UpcomingBike", b =>
                {
                    b.HasOne("Cars_Bikes.Models.TwoWheelerBrand", "TwoWheelerBrands")
                        .WithMany()
                        .HasForeignKey("TwoWBrandId");

                    b.Navigation("TwoWheelerBrands");
                });

            modelBuilder.Entity("Cars_Bikes.Models.TwoWheeler", b =>
                {
                    b.Navigation("TWVarients");
                });

            modelBuilder.Entity("Cars_Bikes.Models.TwoWheelerBrand", b =>
                {
                    b.Navigation("TwoWheelers");
                });
#pragma warning restore 612, 618
        }
    }
}
